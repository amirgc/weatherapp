name: Build/Push/Deploy to Azure Container Instance

on:
  push:
    branches:
      - 'main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Login to Azure Container Registry'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          
      - name: 'Build and push image'
        run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/weatherapp:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/weatherapp:${{ github.sha }}

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
            image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/weatherapp:${{ github.sha }}
            ports: 80, 443
            registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            registry-username: ${{ secrets.REGISTRY_USERNAME }}
            registry-password: ${{ secrets.REGISTRY_PASSWORD }}
            name: weatherapp
            location: 'east us'
            environment-variables: |
              ASPNETCORE_HTTPS_PORTS=443
              ASPNETCORE_HTTP_PORTS=80
              ASPNETCORE_ENVIRONMENT=Production